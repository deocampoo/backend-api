@token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2N2NmZTkyZjZhNjg5MjRmYWE0ZTJlYiIsImVtYWlsIjoicHJ1ZWJhMUBnbWFpbC5jb20iLCJpYXQiOjE3MTk0Njc2NjgsImV4cCI6MTcxOTQ3MTI2OH0.w6JopUwJFU5gwhdTEWKgJvbYSwJmDcpWvpGDYMt71F4
@userId = 667cefdc48baa4209779260e

###
# Registro de un nuevo usuario.
# Envía una solicitud POST para registrar un nuevo usuario.
POST http://localhost:9000/api/auth/signUpUser HTTP/1.1
Content-Type: application/json

{
  "email": "deni_1d@hotmail.com",
  "password": "clave1234",
  "recoveryAnswer": "zorro"
}

###
# Iniciar sesión de un usuario.
# Envía una solicitud POST para autenticar un usuario y obtener un token JWT.
POST http://localhost:9000/api/auth/signInUser HTTP/1.1
Content-Type: application/json

{
  "email": "prueba1@gmail.com",
  "password": "clave1"
}

###
# Cerrar sesion
POST http://localhost:9000/api/auth/logoutUser HTTP/1.1
Content-Type: application/json

{
  "email": "prueba1@gmail.com",
  "password": "clave1"
}

###
# Obtener todos los usuarios.
# Envía una solicitud GET para obtener una lista de todos los usuarios.
# Necesita un token de autorización JWT en el encabezado.
GET http://localhost:9000/api/users HTTP/1.1
Authorization: Bearer {{token}}

###
# Obtener un usuario por ID.
# Envía una solicitud GET para obtener los detalles de un usuario específico por su ID.
# Necesita un token de autorización JWT en el encabezado.
GET http://localhost:9000/api/users/{{userId}} HTTP/1.1
Authorization: Bearer {{token}}

###
# Actualizar un usuario por ID.
# Envía una solicitud PUT para actualizar los detalles de un usuario específico por su ID.
# Necesita un token de autorización JWT en el encabezado.
PUT http://localhost:9000/api/users/recovery HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "email": "prueba1@gmail.com",
  "password": "clave2",
  "recoveryAnswer": "carpincho"
}

###
# Iniciar sesión de un usuario, otra vez, pero con clave correcta
# Envía una solicitud POST para autenticar un usuario y obtener un token JWT.
POST http://localhost:9000/api/auth/signInUser HTTP/1.1
Content-Type: application/json

{
  "email": "prueba1@gmail.com",
  "password": "clave2"
}

###
# Eliminar un usuario por ID.
# Envía una solicitud DELETE para eliminar un usuario específico por su ID.
# Necesita un token de autorización JWT en el encabezado.
DELETE http://localhost:9000/api/users/{{userId}} HTTP/1.1
Authorization: Bearer {{token}}